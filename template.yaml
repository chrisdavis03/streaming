AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  streaming media pipeline

  Sample SAM Template for streaming media pipeline

Parameters:
  Stage:
    Type: String
    Default: dev

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
## S3 Buckets

  ContentDeliveryBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join [ '-' , [!Ref AWS::StackName, content-delivery ] ]
      AccessControl: Private
      LifecycleConfiguration:
        Rules:
          - Id: delete-14days
            Status: Enabled
            ExpirationInDays: 14

  LibraryBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join [ '-' , [!Ref AWS::StackName, library ] ]
      AccessControl: Private
      #todo - archive to Glacier after X days
    
  EncodesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join [ '-' , [!Ref AWS::StackName, encodes ] ]
      AccessControl: Private
      
  ContentDeliveryHandler:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: content-delivery-handler/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        ReceivedFileEvent:
          Type: S3
          Properties:
            Bucket: !Ref ContentDeliveryBucket
            Events: s3:ObjectCreated:*

  IngestContent:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: ingest-content/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        HttpPost:
          Type: Api
          Properties:
            Path: '/content/ingest'
            Method: post

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  ContentDeliveryHandlerFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt ContentDeliveryHandler.Arn
  ContentDeliveryHandlerIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt ContentDeliveryHandlerRole.Arn
